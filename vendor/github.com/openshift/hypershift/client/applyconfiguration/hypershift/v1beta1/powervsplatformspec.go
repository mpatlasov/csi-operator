/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	v1 "k8s.io/api/core/v1"
)

// PowerVSPlatformSpecApplyConfiguration represents a declarative configuration of the PowerVSPlatformSpec type for use
// with apply.
type PowerVSPlatformSpecApplyConfiguration struct {
	AccountID                       *string                                     `json:"accountID,omitempty"`
	CISInstanceCRN                  *string                                     `json:"cisInstanceCRN,omitempty"`
	ResourceGroup                   *string                                     `json:"resourceGroup,omitempty"`
	Region                          *string                                     `json:"region,omitempty"`
	Zone                            *string                                     `json:"zone,omitempty"`
	Subnet                          *PowerVSResourceReferenceApplyConfiguration `json:"subnet,omitempty"`
	ServiceInstanceID               *string                                     `json:"serviceInstanceID,omitempty"`
	VPC                             *PowerVSVPCApplyConfiguration               `json:"vpc,omitempty"`
	KubeCloudControllerCreds        *v1.LocalObjectReference                    `json:"kubeCloudControllerCreds,omitempty"`
	NodePoolManagementCreds         *v1.LocalObjectReference                    `json:"nodePoolManagementCreds,omitempty"`
	IngressOperatorCloudCreds       *v1.LocalObjectReference                    `json:"ingressOperatorCloudCreds,omitempty"`
	StorageOperatorCloudCreds       *v1.LocalObjectReference                    `json:"storageOperatorCloudCreds,omitempty"`
	ImageRegistryOperatorCloudCreds *v1.LocalObjectReference                    `json:"imageRegistryOperatorCloudCreds,omitempty"`
}

// PowerVSPlatformSpecApplyConfiguration constructs a declarative configuration of the PowerVSPlatformSpec type for use with
// apply.
func PowerVSPlatformSpec() *PowerVSPlatformSpecApplyConfiguration {
	return &PowerVSPlatformSpecApplyConfiguration{}
}

// WithAccountID sets the AccountID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AccountID field is set to the value of the last call.
func (b *PowerVSPlatformSpecApplyConfiguration) WithAccountID(value string) *PowerVSPlatformSpecApplyConfiguration {
	b.AccountID = &value
	return b
}

// WithCISInstanceCRN sets the CISInstanceCRN field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CISInstanceCRN field is set to the value of the last call.
func (b *PowerVSPlatformSpecApplyConfiguration) WithCISInstanceCRN(value string) *PowerVSPlatformSpecApplyConfiguration {
	b.CISInstanceCRN = &value
	return b
}

// WithResourceGroup sets the ResourceGroup field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ResourceGroup field is set to the value of the last call.
func (b *PowerVSPlatformSpecApplyConfiguration) WithResourceGroup(value string) *PowerVSPlatformSpecApplyConfiguration {
	b.ResourceGroup = &value
	return b
}

// WithRegion sets the Region field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Region field is set to the value of the last call.
func (b *PowerVSPlatformSpecApplyConfiguration) WithRegion(value string) *PowerVSPlatformSpecApplyConfiguration {
	b.Region = &value
	return b
}

// WithZone sets the Zone field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Zone field is set to the value of the last call.
func (b *PowerVSPlatformSpecApplyConfiguration) WithZone(value string) *PowerVSPlatformSpecApplyConfiguration {
	b.Zone = &value
	return b
}

// WithSubnet sets the Subnet field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Subnet field is set to the value of the last call.
func (b *PowerVSPlatformSpecApplyConfiguration) WithSubnet(value *PowerVSResourceReferenceApplyConfiguration) *PowerVSPlatformSpecApplyConfiguration {
	b.Subnet = value
	return b
}

// WithServiceInstanceID sets the ServiceInstanceID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ServiceInstanceID field is set to the value of the last call.
func (b *PowerVSPlatformSpecApplyConfiguration) WithServiceInstanceID(value string) *PowerVSPlatformSpecApplyConfiguration {
	b.ServiceInstanceID = &value
	return b
}

// WithVPC sets the VPC field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VPC field is set to the value of the last call.
func (b *PowerVSPlatformSpecApplyConfiguration) WithVPC(value *PowerVSVPCApplyConfiguration) *PowerVSPlatformSpecApplyConfiguration {
	b.VPC = value
	return b
}

// WithKubeCloudControllerCreds sets the KubeCloudControllerCreds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KubeCloudControllerCreds field is set to the value of the last call.
func (b *PowerVSPlatformSpecApplyConfiguration) WithKubeCloudControllerCreds(value v1.LocalObjectReference) *PowerVSPlatformSpecApplyConfiguration {
	b.KubeCloudControllerCreds = &value
	return b
}

// WithNodePoolManagementCreds sets the NodePoolManagementCreds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NodePoolManagementCreds field is set to the value of the last call.
func (b *PowerVSPlatformSpecApplyConfiguration) WithNodePoolManagementCreds(value v1.LocalObjectReference) *PowerVSPlatformSpecApplyConfiguration {
	b.NodePoolManagementCreds = &value
	return b
}

// WithIngressOperatorCloudCreds sets the IngressOperatorCloudCreds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IngressOperatorCloudCreds field is set to the value of the last call.
func (b *PowerVSPlatformSpecApplyConfiguration) WithIngressOperatorCloudCreds(value v1.LocalObjectReference) *PowerVSPlatformSpecApplyConfiguration {
	b.IngressOperatorCloudCreds = &value
	return b
}

// WithStorageOperatorCloudCreds sets the StorageOperatorCloudCreds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StorageOperatorCloudCreds field is set to the value of the last call.
func (b *PowerVSPlatformSpecApplyConfiguration) WithStorageOperatorCloudCreds(value v1.LocalObjectReference) *PowerVSPlatformSpecApplyConfiguration {
	b.StorageOperatorCloudCreds = &value
	return b
}

// WithImageRegistryOperatorCloudCreds sets the ImageRegistryOperatorCloudCreds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ImageRegistryOperatorCloudCreds field is set to the value of the last call.
func (b *PowerVSPlatformSpecApplyConfiguration) WithImageRegistryOperatorCloudCreds(value v1.LocalObjectReference) *PowerVSPlatformSpecApplyConfiguration {
	b.ImageRegistryOperatorCloudCreds = &value
	return b
}
