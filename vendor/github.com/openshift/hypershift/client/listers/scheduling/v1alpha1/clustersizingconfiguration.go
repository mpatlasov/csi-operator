/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	schedulingv1alpha1 "github.com/openshift/hypershift/api/scheduling/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// ClusterSizingConfigurationLister helps list ClusterSizingConfigurations.
// All objects returned here must be treated as read-only.
type ClusterSizingConfigurationLister interface {
	// List lists all ClusterSizingConfigurations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*schedulingv1alpha1.ClusterSizingConfiguration, err error)
	// Get retrieves the ClusterSizingConfiguration from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*schedulingv1alpha1.ClusterSizingConfiguration, error)
	ClusterSizingConfigurationListerExpansion
}

// clusterSizingConfigurationLister implements the ClusterSizingConfigurationLister interface.
type clusterSizingConfigurationLister struct {
	listers.ResourceIndexer[*schedulingv1alpha1.ClusterSizingConfiguration]
}

// NewClusterSizingConfigurationLister returns a new ClusterSizingConfigurationLister.
func NewClusterSizingConfigurationLister(indexer cache.Indexer) ClusterSizingConfigurationLister {
	return &clusterSizingConfigurationLister{listers.New[*schedulingv1alpha1.ClusterSizingConfiguration](indexer, schedulingv1alpha1.Resource("clustersizingconfiguration"))}
}
