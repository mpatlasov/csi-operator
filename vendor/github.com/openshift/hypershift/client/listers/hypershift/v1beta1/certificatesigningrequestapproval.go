/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	hypershiftv1beta1 "github.com/openshift/hypershift/api/hypershift/v1beta1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// CertificateSigningRequestApprovalLister helps list CertificateSigningRequestApprovals.
// All objects returned here must be treated as read-only.
type CertificateSigningRequestApprovalLister interface {
	// List lists all CertificateSigningRequestApprovals in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*hypershiftv1beta1.CertificateSigningRequestApproval, err error)
	// CertificateSigningRequestApprovals returns an object that can list and get CertificateSigningRequestApprovals.
	CertificateSigningRequestApprovals(namespace string) CertificateSigningRequestApprovalNamespaceLister
	CertificateSigningRequestApprovalListerExpansion
}

// certificateSigningRequestApprovalLister implements the CertificateSigningRequestApprovalLister interface.
type certificateSigningRequestApprovalLister struct {
	listers.ResourceIndexer[*hypershiftv1beta1.CertificateSigningRequestApproval]
}

// NewCertificateSigningRequestApprovalLister returns a new CertificateSigningRequestApprovalLister.
func NewCertificateSigningRequestApprovalLister(indexer cache.Indexer) CertificateSigningRequestApprovalLister {
	return &certificateSigningRequestApprovalLister{listers.New[*hypershiftv1beta1.CertificateSigningRequestApproval](indexer, hypershiftv1beta1.Resource("certificatesigningrequestapproval"))}
}

// CertificateSigningRequestApprovals returns an object that can list and get CertificateSigningRequestApprovals.
func (s *certificateSigningRequestApprovalLister) CertificateSigningRequestApprovals(namespace string) CertificateSigningRequestApprovalNamespaceLister {
	return certificateSigningRequestApprovalNamespaceLister{listers.NewNamespaced[*hypershiftv1beta1.CertificateSigningRequestApproval](s.ResourceIndexer, namespace)}
}

// CertificateSigningRequestApprovalNamespaceLister helps list and get CertificateSigningRequestApprovals.
// All objects returned here must be treated as read-only.
type CertificateSigningRequestApprovalNamespaceLister interface {
	// List lists all CertificateSigningRequestApprovals in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*hypershiftv1beta1.CertificateSigningRequestApproval, err error)
	// Get retrieves the CertificateSigningRequestApproval from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*hypershiftv1beta1.CertificateSigningRequestApproval, error)
	CertificateSigningRequestApprovalNamespaceListerExpansion
}

// certificateSigningRequestApprovalNamespaceLister implements the CertificateSigningRequestApprovalNamespaceLister
// interface.
type certificateSigningRequestApprovalNamespaceLister struct {
	listers.ResourceIndexer[*hypershiftv1beta1.CertificateSigningRequestApproval]
}
