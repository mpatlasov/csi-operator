/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	hypershiftv1beta1 "github.com/openshift/hypershift/api/hypershift/v1beta1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// HostedControlPlaneLister helps list HostedControlPlanes.
// All objects returned here must be treated as read-only.
type HostedControlPlaneLister interface {
	// List lists all HostedControlPlanes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*hypershiftv1beta1.HostedControlPlane, err error)
	// HostedControlPlanes returns an object that can list and get HostedControlPlanes.
	HostedControlPlanes(namespace string) HostedControlPlaneNamespaceLister
	HostedControlPlaneListerExpansion
}

// hostedControlPlaneLister implements the HostedControlPlaneLister interface.
type hostedControlPlaneLister struct {
	listers.ResourceIndexer[*hypershiftv1beta1.HostedControlPlane]
}

// NewHostedControlPlaneLister returns a new HostedControlPlaneLister.
func NewHostedControlPlaneLister(indexer cache.Indexer) HostedControlPlaneLister {
	return &hostedControlPlaneLister{listers.New[*hypershiftv1beta1.HostedControlPlane](indexer, hypershiftv1beta1.Resource("hostedcontrolplane"))}
}

// HostedControlPlanes returns an object that can list and get HostedControlPlanes.
func (s *hostedControlPlaneLister) HostedControlPlanes(namespace string) HostedControlPlaneNamespaceLister {
	return hostedControlPlaneNamespaceLister{listers.NewNamespaced[*hypershiftv1beta1.HostedControlPlane](s.ResourceIndexer, namespace)}
}

// HostedControlPlaneNamespaceLister helps list and get HostedControlPlanes.
// All objects returned here must be treated as read-only.
type HostedControlPlaneNamespaceLister interface {
	// List lists all HostedControlPlanes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*hypershiftv1beta1.HostedControlPlane, err error)
	// Get retrieves the HostedControlPlane from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*hypershiftv1beta1.HostedControlPlane, error)
	HostedControlPlaneNamespaceListerExpansion
}

// hostedControlPlaneNamespaceLister implements the HostedControlPlaneNamespaceLister
// interface.
type hostedControlPlaneNamespaceLister struct {
	listers.ResourceIndexer[*hypershiftv1beta1.HostedControlPlane]
}
